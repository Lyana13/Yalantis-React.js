{"ast":null,"code":"var _jsxFileName = \"/home/lyana/test/src/Users.js\";\nimport React from \"react\";\nimport './App.css';\n\nclass Users extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      users: []\n    };\n    console.log(\"state\", this.state.users);\n  }\n\n  componentDidMount() {\n    fetch('https://yalantis-react-school-api.yalantis.com/api/task0/users').then(response => {\n      return response.json();\n    }).then(data => {\n      // let monthes = data.map(obj => {\n      // \tlet date =\tnew Date(obj.dob );\n      // \treturn date.getMonth() + 1;\n      // })\n      // console.log(\"monthes\", monthes);\n      // let data = data.dob;\n      // console.log(\"data\", data);\n      let mapUsers = new Map();\n      data.forEach(user => {\n        let date = new Date(user.dob);\n        let month = date.getMonth();\n        let usersGroup = mapUsers.get(month);\n\n        if (!usersGroup) {\n          mapUsers.set(month, [user]);\n        } //mapUsers.set(month, user);\n\n      });\n      console.log(\"mapUsers\", mapUsers);\n      this.setState({\n        users: data\n      }); // let m = this.state.users;\n      // console.log(Object.entries(m));\n      // let roots = m.getMonth();\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 4\n      }\n    }, this.state.users.map(users => /*#__PURE__*/React.createElement(\"p\", {\n      key: users.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }\n    }, users.dob)));\n  }\n\n}\n\nexport default Users;","map":{"version":3,"sources":["/home/lyana/test/src/Users.js"],"names":["React","Users","Component","constructor","props","state","users","console","log","componentDidMount","fetch","then","response","json","data","mapUsers","Map","forEach","user","date","Date","dob","month","getMonth","usersGroup","get","set","setState","render","map","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;;AAEA,MAAMC,KAAN,SAAoBD,KAAK,CAACE,SAA1B,CAAoC;AACnCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACjB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACZC,MAAAA,KAAK,EAAE;AADK,KAAb;AAGAC,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqB,KAAKH,KAAL,CAAWC,KAAhC;AACA;;AAEDG,EAAAA,iBAAiB,GAAG;AACnBC,IAAAA,KAAK,CAAC,gEAAD,CAAL,CACGC,IADH,CACSC,QAAD,IAAc;AAClB,aAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,KAHH,EAIGF,IAJH,CAISG,IAAD,IAAU;AACf;AACA;AACA;AACA;AACA;AAED;AACA;AACA,UAAIC,QAAQ,GAAG,IAAIC,GAAJ,EAAf;AAEAF,MAAAA,IAAI,CAACG,OAAL,CAAcC,IAAI,IAAI;AACrB,YAAIC,IAAI,GAAG,IAAIC,IAAJ,CAAUF,IAAI,CAACG,GAAf,CAAX;AACA,YAAIC,KAAK,GAAGH,IAAI,CAACI,QAAL,EAAZ;AACA,YAAIC,UAAU,GAAGT,QAAQ,CAACU,GAAT,CAAaH,KAAb,CAAjB;;AACA,YAAI,CAACE,UAAL,EAAgB;AACfT,UAAAA,QAAQ,CAACW,GAAT,CAAaJ,KAAb,EAAoB,CAACJ,IAAD,CAApB;AACA,SANoB,CAOrB;;AACF,OARC;AASAX,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAuBO,QAAvB;AACA,WAAKY,QAAL,CAAc;AAAErB,QAAAA,KAAK,EAAEQ;AAAT,OAAd,EArBgB,CAuBhB;AACA;AAEA;AAGC,KAjCH;AAmCA;;AAEDc,EAAAA,MAAM,GAAG;AACR,wBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACc,KAAKvB,KAAL,CAAWC,KAAX,CAAiBuB,GAAjB,CAAsBvB,KAAD,iBAClB;AAAG,MAAA,GAAG,EAAEA,KAAK,CAACwB,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAoBxB,KAAK,CAACe,GAA1B,CADH,CADd,CADD;AAOA;;AAxDkC;;AA2DpC,eAAepB,KAAf","sourcesContent":["import React from \"react\";\nimport './App.css';\n\nclass Users extends React.Component {\n\tconstructor(props){\n\t\tsuper(props);\n\n\t\tthis.state = { \n\t\t\tusers: [] \n\t\t};\n\t\tconsole.log(\"state\", this.state.users);\n\t}\n\n\tcomponentDidMount() {\n\t\tfetch('https://yalantis-react-school-api.yalantis.com/api/task0/users')\n\t  \t.then((response) => {\n\t   \t\treturn response.json();\n\t  \t})\n\t  \t.then((data) => {\n\t  \t\t// let monthes = data.map(obj => {\n\t  \t\t// \tlet date =\tnew Date(obj.dob );\n\t  \t\t// \treturn date.getMonth() + 1;\n\t  \t\t// })\n\t  \t\t// console.log(\"monthes\", monthes);\n\t\t\n\t  \t// let data = data.dob;\n\t  \t// console.log(\"data\", data);\n\t  \tlet mapUsers = new Map();\n\n\t  \tdata.forEach( user => {\n\t  \t\tlet date = new Date( user.dob );\n\t  \t\tlet month = date.getMonth();\n\t  \t\tlet usersGroup = mapUsers.get(month);\n\t  \t\tif (!usersGroup){\n\t  \t\t\tmapUsers.set(month, [user]);\n\t  \t\t}\n\t  \t\t//mapUsers.set(month, user);\n\t\t})\n\t  \tconsole.log(\"mapUsers\",mapUsers);\n\t  \tthis.setState({ users: data });\n\t  \t\n\t  \t// let m = this.state.users;\n\t  \t// console.log(Object.entries(m));\n\t  \t\n\t  \t// let roots = m.getMonth();\n\t \t\n\t    \n\t  \t});\n\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n                {this.state.users.map((users) => (\n                    <p key={users.id}>{ users.dob }</p>\n                ))}\n            </div>\n\t\t);\n\t}\n}\n\nexport default Users;"]},"metadata":{},"sourceType":"module"}